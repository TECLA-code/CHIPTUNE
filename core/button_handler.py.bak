# =============================================================================
# BUTTON HANDLER - TECLA
# =============================================================================
import time

# Constants de temps per polsacions llargues - Temps Humà Natural
LONG_PRESS_SUMMARY = 1.5  # 1.5s - Mostrar resum complet (Extra1) - més deliberat
LONG_PRESS_PAUSE = 1.5    # 1.5s - Pausa total/stop (Extra2) - evita stops accidentals

# Debounce times globals
_debounce = {}
for i in range(6):
    _debounce[i] = 0.0

def boton_presionado(boton, idx, tiempo_espera=0.08):  # 80ms debounce més natural
    """Verifica botó amb debounce NO BLOQUEJANT"""
    ct = time.monotonic()
    if boton.value and ct - _debounce[idx] > tiempo_espera:
        _debounce[idx] = ct
        return True
    return False

def process_buttons(hw, cfg, rtos, current_time):
    """Processa tots els botons amb prioritats RTOS"""
    
    # MODE CALIBRACIÓ: Botons extra 1 + 2 premuts junts
    if hw.boton_extra_1.value and hw.boton_extra_2.value:
        # Debounce per evitar canvis múltiples
        if current_time - _debounce.get(10, 0) > 0.5:  # 500ms debounce per calibració
            cfg.calibration_mode = not cfg.calibration_mode
            cfg.last_interaction_time = current_time
            _debounce[10] = current_time
        return
    
    # Botó extra 1: Tracker=canviar pàgina, Normal=cicla config
    if hw.boton_extra_1.value and not cfg.calibration_mode:
        if cfg.button_hold_times[4] == 0:
            cfg.button_hold_times[4] = current_time
        
        hold_duration = current_time - cfg.button_hold_times[4]
        
        # Polsació llarga: mostrar resum complet (només mode normal)
        if hold_duration > LONG_PRESS_SUMMARY and not cfg.button_long_press_triggered[4] and not cfg.sequencer_mode_active:
            cfg.show_full_summary = True
            cfg.button_long_press_triggered[4] = True
    elif cfg.button_hold_times[4] > 0:
        # Deixa anar: Tracker o Normal
        if not cfg.button_long_press_triggered[4]:
            if cfg.sequencer_mode_active:
                # MODE TRACKER: Ciclar pàgines (0→1→2→0)
                cfg.sequencer_page = (cfg.sequencer_page + 1) % 3
            else:
                # MODE NORMAL: Ciclar configout
                cfg.configout = (cfg.configout + 1) % 8
                cfg.show_config_mode = True
                cfg.config_display_timer = 0
        else:
            cfg.show_full_summary = False
        cfg.button_hold_times[4] = 0
        cfg.button_long_press_triggered[4] = False
        cfg.last_interaction_time = current_time
    
    # Botó extra 2: Curta=enrere config, Llarga(>1s)=pausa/stop
    if hw.boton_extra_2.value and not cfg.calibration_mode:
        if cfg.button_hold_times[5] == 0:
            cfg.button_hold_times[5] = current_time
        
        hold_duration = current_time - cfg.button_hold_times[5]
        
        # Polsació llarga: pausa total (ÚNICA SORTIDA del sequencer)
        if hold_duration > LONG_PRESS_PAUSE and not cfg.button_long_press_triggered[5]:
            cfg.loop_mode = 0
            rtos.stop_all_notes()
            cfg.iteration = 0
            cfg.caos = 0
            cfg.sequencer_mode_active = False  # Desactivar bloqueig tracker
            cfg.sequencer_page = 0  # Reset a pàgina 0
            cfg.sequencer_play_position = 0  # Reset reproducció
            # edit_position es manté per continuar editant després
            hw.all_leds_off()
            cfg.button_long_press_triggered[5] = True
    elif cfg.button_hold_times[5] > 0:
        # Deixa anar: si no era llarga, enrere configout
        if not cfg.button_long_press_triggered[5]:
            cfg.configout = (cfg.configout - 1) % 8  # 8 opcions: 7-0 (rota circular enrere)
            cfg.show_config_mode = True
            cfg.config_display_timer = 0
        cfg.button_hold_times[5] = 0
        cfg.button_long_press_triggered[5] = False
        cfg.last_interaction_time = current_time
    
# Botó cruceta 1: ↑ Pujar octava (normal) / Anar a nota anterior (tracker)
    if boton_presionado(hw.boton_crueta_1, 0):
        cfg.last_interaction_time = current_time
        if cfg.sequencer_mode_active and cfg.sequencer_page == 0:
            # MODE TRACKER - Pàgina 0: Anar a nota anterior
            cfg.sequencer_edit_position = (cfg.sequencer_edit_position - 1) % cfg.sequencer_length
            cfg.sequencer_note_edit_mode = False  # Sortir del mode edició al canviar de nota
        elif not cfg.sequencer_mode_active:
            # MODE NORMAL: Pujar octava
            if cfg.octava < 8:
                cfg.octava += 1
                cfg.caos = 0
            else:
                cfg.caos = 1 if cfg.caos == 0 else 0
    
    # Botó cruceta 2: ↓ Anar a nota següent (tracker) / Baixar octava (normal)
    if boton_presionado(hw.boton_crueta_2, 1):
        cfg.last_interaction_time = current_time
        if cfg.sequencer_mode_active and cfg.sequencer_page == 0:
            # MODE TRACKER - Pàgina 0: Anar a nota següent
            cfg.sequencer_edit_position = (cfg.sequencer_edit_position + 1) % cfg.sequencer_length
            cfg.sequencer_note_edit_mode = False  # Sortir del mode edició al canviar de nota
        elif not cfg.sequencer_mode_active:
            # MODE NORMAL: Baixar octava
            if cfg.octava > 0:
                cfg.octava -= 1
                cfg.caos = 0
            else:
                # Quan està a octava mínima, toggle caos
                cfg.caos = 1 if cfg.caos == 0 else 0
    
    # Botó cruceta 3: Decrementar valor amb acceleració (si no calibració)
    if hw.boton_crueta_3.value and not cfg.calibration_mode:
        if cfg.button_debounce_time[2] == 0:
            cfg.button_debounce_time[2] = current_time
            cfg.config_hold_time = 0.0
        
        # Calcular acceleració exponencial - Progressió més natural
        cfg.config_hold_time = current_time - cfg.button_debounce_time[2]
        if cfg.config_hold_time > 2.0:      # Acceleració màxima més tard
            cfg.config_acceleration = 8
        elif cfg.config_hold_time > 1.5:    # Progressió més gradual
            cfg.config_acceleration = 4
        elif cfg.config_hold_time > 0.8:    # Temps més natural abans d'accelerar
            cfg.config_acceleration = 2
        else:
            cfg.config_acceleration = 1
        
        cfg.last_interaction_time = current_time
        
        if cfg.configout == 0:
            if cfg.sequencer_mode_active and cfg.sequencer_page == 0:
                # MODE TRACKER - Pàgina 0: Cíclic entre OFF → MID → FULL → OFF
                current_gate = cfg.sequencer_gate[cfg.sequencer_edit_position]
                if current_gate == cfg.SEQUENCER_GATE_OFF:
                    new_gate = cfg.SEQUENCER_GATE_MID
                elif current_gate == cfg.SEQUENCER_GATE_MID:
                    new_gate = cfg.SEQUENCER_GATE_FULL
                else:
                    new_gate = cfg.SEQUENCER_GATE_OFF
                cfg.sequencer_gate[cfg.sequencer_edit_position] = new_gate
                # Sortir del mode edició de nota si està actiu
                cfg.sequencer_note_edit_mode = False
            elif cfg.sequencer_mode_active and cfg.sequencer_page == 1:
                # Pàgina 1: Disminuir longitud
                cfg.sequencer_length = max(8, cfg.sequencer_length - 1)
                # Ajustar edit position si està fora de rang
                if cfg.sequencer_edit_position >= cfg.sequencer_length:
                    cfg.sequencer_edit_position = cfg.sequencer_length - 1
            elif not cfg.sequencer_mode_active:
                # MODE NORMAL: Canvi de loop mode
                cfg.loop_mode = (cfg.loop_mode - 1) if cfg.loop_mode > 1 else 9
                rtos.stop_all_notes()
        elif cfg.configout == 1:
            cfg.duty1 = max(1, cfg.duty1 - cfg.config_acceleration)
        elif cfg.configout == 2:
            cfg.duty2 = max(1, cfg.duty2 - cfg.config_acceleration)
        elif cfg.configout == 3:
            cfg.duty3 = max(1, cfg.duty3 - cfg.config_acceleration)
        elif cfg.configout == 4:
            cfg.freqharm1 = (cfg.freqharm1 - 1) % 9
        elif cfg.configout == 5:
            cfg.freqharm2 = (cfg.freqharm2 - 1) % 9
        elif cfg.configout == 6:
            cfg.cv1_range_config = (cfg.cv1_range_config - 1) % 5
            cfg.apply_cv1_range_preset()
        elif cfg.configout == 7:
            cfg.cv2_range_config = (cfg.cv2_range_config - 1) % 5
            cfg.apply_cv2_range_preset()
        
        cfg.show_config_mode = True
        cfg.config_display_timer = 0
        
        # Debounce gestionat pel sistema temporal (button_debounce_time)
    else:
        cfg.button_debounce_time[2] = 0
        cfg.config_acceleration = 1
    
    # Botó cruceta 4: En modo Tracker, cambiar potenciómetro de nota. En modo normal, incrementar valor.
    if hw.boton_crueta_4.value and not cfg.calibration_mode:
        if cfg.button_debounce_time[3] == 0:
            cfg.button_debounce_time[3] = current_time
            cfg.config_hold_time = 0.0
        
        # Calcular acceleració exponencial - Progressió més natural
        cfg.config_hold_time = current_time - cfg.button_debounce_time[3]
        if cfg.config_hold_time > 2.0:      # Acceleració màxima més tard
            cfg.config_acceleration = 8
        elif cfg.config_hold_time > 1.5:    # Progressió més gradual
            cfg.config_acceleration = 4
        elif cfg.config_hold_time > 0.8:    # Temps més natural abans d'accelerar
            cfg.config_acceleration = 2
        else:
            cfg.config_acceleration = 1
        
        cfg.last_interaction_time = current_time
        
        if cfg.configout == 0:
            if cfg.sequencer_mode_active and cfg.sequencer_page == 0:
                # MODE TRACKER - Pàgina 0: Confirmar canvi de nota o entrar en mode edició
                if cfg.sequencer_note_edit_mode:
                    # Confirmar canvi de nota
                    cfg.sequencer_pattern[cfg.sequencer_edit_position] = cfg.sequencer_pending_note
                    cfg.sequencer_note_edit_mode = False
                else:
                    # Entrar en mode edició
                    cfg.sequencer_note_edit_mode = True
                    cfg.sequencer_pending_note = cfg.sequencer_pattern[cfg.sequencer_edit_position]
            elif cfg.sequencer_mode_active and cfg.sequencer_page == 1:
                # Pàgina 1: Augmentar longitud
                cfg.sequencer_length = min(32, cfg.sequencer_length + 1)
            elif not cfg.sequencer_mode_active:
                # MODE NORMAL: Canvi de loop mode
                cfg.loop_mode = (cfg.loop_mode + 1) if cfg.loop_mode < 9 else 1
                rtos.stop_all_notes()
        elif cfg.configout == 1:
            cfg.duty1 = min(99, cfg.duty1 + cfg.config_acceleration)
        elif cfg.configout == 2:
            cfg.duty2 = min(99, cfg.duty2 + cfg.config_acceleration)
        elif cfg.configout == 3:
            cfg.duty3 = min(99, cfg.duty3 + cfg.config_acceleration)
        elif cfg.configout == 4:
            cfg.freqharm1 = (cfg.freqharm1 + 1) % 9
        elif cfg.configout == 5:
            cfg.freqharm2 = (cfg.freqharm2 + 1) % 9
        elif cfg.configout == 6:
            cfg.cv1_range_config = (cfg.cv1_range_config + 1) % 5
            cfg.apply_cv1_range_preset()
        elif cfg.configout == 7:
            cfg.cv2_range_config = (cfg.cv2_range_config + 1) % 5
            cfg.apply_cv2_range_preset()
        
        cfg.show_config_mode = True
        cfg.config_display_timer = 0
        
        # Debounce gestionat pel sistema temporal (button_debounce_time)
    else:
        cfg.button_debounce_time[3] = 0
        cfg.config_acceleration = 1
